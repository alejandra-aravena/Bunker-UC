-- MySQL Script generated by MySQL Workbench
-- Mon Mar 16 17:19:05 2015
-- Model: Encuestadores UC    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema encuc
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Table `usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `usuarios` (
  `id_usuario` INT NOT NULL AUTO_INCREMENT,
  `usrname` VARCHAR(45) NOT NULL,
  `password` VARCHAR(45) NOT NULL,
  `ip_estacion` VARCHAR(45) NULL,
  `num_cdr` VARCHAR(45) NULL,
  PRIMARY KEY (`id_usuario`),
  UNIQUE INDEX `id_usuarios_UNIQUE` (`id_usuario` ASC),
  UNIQUE INDEX `usrname_UNIQUE` (`usrname` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `roles`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `roles` (
  `id_rol` INT NOT NULL AUTO_INCREMENT,
  `rol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`id_rol`),
  UNIQUE INDEX `id_rol_UNIQUE` (`id_rol` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `roles_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `roles_usuarios` (
  `id_usuario` INT NOT NULL,
  `id_rol` INT NOT NULL,
  INDEX `ru_rol_idx` (`id_rol` ASC),
  CONSTRAINT `ru_usr`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ru_rol`
    FOREIGN KEY (`id_rol`)
    REFERENCES `roles` (`id_rol`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `casos` (
  `id_caso` INT NOT NULL AUTO_INCREMENT,
  `telefono` VARCHAR(45) NOT NULL,
  `intentos_llamada` INT(2) NULL DEFAULT 0,
  `intentos_fservicio` INT(2) NULL DEFAULT 0,
  PRIMARY KEY (`id_caso`),
  UNIQUE INDEX `id_caso_UNIQUE` (`id_caso` ASC),
  UNIQUE INDEX `telefono_UNIQUE` (`telefono` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `columnas_extra`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `columnas_extra` (
  `id_columna` INT NOT NULL AUTO_INCREMENT,
  `columna` VARCHAR(45) NULL,
  PRIMARY KEY (`id_columna`),
  UNIQUE INDEX `id_columna_UNIQUE` (`id_columna` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estados`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estados` (
  `id_estado` INT NOT NULL AUTO_INCREMENT,
  `estado` VARCHAR(45) NULL,
  `descripcion` VARCHAR(255) NULL,
  `visibilidad` INT NOT NULL DEFAULT 1,
  PRIMARY KEY (`id_estado`),
  UNIQUE INDEX `id_estado_UNIQUE` (`id_estado` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encuestas`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encuestas` (
  `id_encuesta` INT NOT NULL AUTO_INCREMENT,
  `encuesta` VARCHAR(255) NULL,
  `limesurvey_encuesta` VARCHAR(255) NULL,
  PRIMARY KEY (`id_encuesta`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `columnas_casos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `columnas_casos` (
  `id_caso` INT NOT NULL,
  `id_columna` INT NOT NULL,
  `valor` VARCHAR(255) NULL,
  PRIMARY KEY (`id_caso`),
  INDEX `ce_columna_idx` (`id_columna` ASC),
  CONSTRAINT `ce_caso`
    FOREIGN KEY (`id_caso`)
    REFERENCES `casos` (`id_caso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ce_columna`
    FOREIGN KEY (`id_columna`)
    REFERENCES `columnas_extra` (`id_columna`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estados_casos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estados_casos` (
  `id_caso` INT NOT NULL,
  `id_estado` INT NOT NULL DEFAULT 1,
  `id_usuario` INT NOT NULL,
  `valor` VARCHAR(500) NULL,
  `agenda` DATETIME NULL,
  `update_date` TIMESTAMP NULL DEFAULT CURRENT_TIMESTAMP,
  `limesurvey_caso` VARCHAR(255) NULL,
  `cdr_caso` VARCHAR(255) NULL,
  INDEX `ee_estado_idx` (`id_estado` ASC),
  INDEX `ee_usuario_idx` (`id_usuario` ASC),
  CONSTRAINT `ee_caso`
    FOREIGN KEY (`id_caso`)
    REFERENCES `casos` (`id_caso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ee_estado`
    FOREIGN KEY (`id_estado`)
    REFERENCES `estados` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ee_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `encuestas_casos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `encuestas_casos` (
  `id_caso` INT NOT NULL,
  `id_encuesta` INT NOT NULL,
  PRIMARY KEY (`id_caso`),
  INDEX `ene_encuesta_idx` (`id_encuesta` ASC),
  CONSTRAINT `ene_caso`
    FOREIGN KEY (`id_caso`)
    REFERENCES `casos` (`id_caso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `ene_encuesta`
    FOREIGN KEY (`id_encuesta`)
    REFERENCES `encuestas` (`id_encuesta`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `acciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `acciones` (
  `id_accion` INT NOT NULL AUTO_INCREMENT,
  `accion` VARCHAR(45) NULL,
  PRIMARY KEY (`id_accion`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `estados_acciones`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `estados_acciones` (
  `id_estado` INT NOT NULL,
  `id_accion` INT NOT NULL,
  `prioridad` INT NOT NULL,
  PRIMARY KEY (`id_estado`),
  INDEX `pe_accion_idx` (`id_accion` ASC),
  CONSTRAINT `pe_estado`
    FOREIGN KEY (`id_estado`)
    REFERENCES `estados` (`id_estado`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `pe_accion`
    FOREIGN KEY (`id_accion`)
    REFERENCES `acciones` (`id_accion`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `generales`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `generales` (
  `id_general` INT NOT NULL AUTO_INCREMENT,
  `general` VARCHAR(100) NULL,
  `valor` VARCHAR(255) NULL,
  PRIMARY KEY (`id_general`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casos_usuarios`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `casos_usuarios` (
  `id_caso` INT NOT NULL,
  `id_usuario` INT NULL,
  PRIMARY KEY (`id_caso`),
  INDEX `uc_id_usuario_idx` (`id_usuario` ASC),
  CONSTRAINT `uc_id_usuario`
    FOREIGN KEY (`id_usuario`)
    REFERENCES `usuarios` (`id_usuario`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `uc_id_caso`
    FOREIGN KEY (`id_caso`)
    REFERENCES `casos` (`id_caso`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `columnas_visibilidad`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `columnas_visibilidad` (
  `nombre_columna` VARCHAR(100) NOT NULL,
  `visibilidad` INT NULL,
  PRIMARY KEY (`nombre_columna`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `cdr`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `cdr` (
  `id_cdr` INT NOT NULL,
  `i` VARCHAR(45) NULL,
  PRIMARY KEY (`id_cdr`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `casos_repetidos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `casos_repetidos` (
  `id_caso_repetido` INT NOT NULL AUTO_INCREMENT,
  `telefono` VARCHAR(45) NULL,
  PRIMARY KEY (`id_caso_repetido`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Placeholder table for view `listar_casos_activos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `listar_casos_activos` (`CASO` INT, `usr_asignado` INT, `usr_cambio` INT, `valor` INT, `prioridad` INT, `update_date` INT, `fecha` INT, `id_caso` INT, `telefono` INT, `intentos_llamada` INT, `intentos_fservicio` INT, `id_usuario` INT, `usrname` INT, `password` INT, `ip_estacion` INT, `num_cdr` INT, `id_encuesta` INT, `encuesta` INT, `limesurvey_encuesta` INT, `id_estado` INT, `estado` INT, `descripcion` INT, `visibilidad` INT, `id_accion` INT, `accion` INT, `agenda` INT, `agendaF` INT, `limesurvey_caso` INT, `cdr_caso` INT);

-- -----------------------------------------------------
-- Placeholder table for view `listar_casos_usuario`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `listar_casos_usuario` (`valor` INT, `id_caso` INT, `intentos_llamada` INT, `intentos_fservicio` INT, `telefono` INT, `id_encuesta` INT, `limesurvey_encuesta` INT, `encuesta` INT, `estado` INT, `id_estado` INT, `accion` INT, `prioridad` INT, `usrname` INT, `limesurvey_caso` INT, `cdr_caso` INT, `update_date` INT, `fecha` INT, `fecha2` INT);

-- -----------------------------------------------------
-- Placeholder table for view `listar_usuarios_casos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `listar_usuarios_casos` (`CASO` INT, `usr_asignado` INT, `usr_cambio` INT, `valor` INT, `prioridad` INT, `update_date` INT, `fecha` INT, `id_caso` INT, `telefono` INT, `intentos_llamada` INT, `intentos_fservicio` INT, `id_usuario` INT, `usrname` INT, `password` INT, `ip_estacion` INT, `num_cdr` INT, `id_encuesta` INT, `encuesta` INT, `limesurvey_encuesta` INT, `id_estado` INT, `estado` INT, `descripcion` INT, `visibilidad` INT, `id_accion` INT, `accion` INT, `agenda` INT, `agendaF` INT, `limesurvey_caso` INT, `cdr_caso` INT);

-- -----------------------------------------------------
-- Placeholder table for view `listar_estados_casos`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `listar_estados_casos` (`id_caso` INT, `telefono` INT, `estado` INT, `usrname` INT, `valor` INT, `agenda` INT, `agendaF` INT, `update_date` INT, `fecha` INT, `limesurvey_caso` INT, `cdr_caso` INT);

-- -----------------------------------------------------
-- View `listar_casos_activos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listar_casos_activos`;
CREATE  OR REPLACE VIEW `listar_casos_activos` AS
SELECT a.id_caso CASO, a.id_usuario usr_asignado, f.id_usuario usr_cambio, valor, prioridad, update_date, DATE_FORMAT(update_date, '%d/%m %k:%i') fecha, b.*, c.*, e.*, g.*, i.*, agenda, DATE_FORMAT(agenda, '%d/%m %k:%i') agendaF, limesurvey_caso, cdr_caso FROM casos b 
					LEFT JOIN casos_usuarios a ON b.id_caso = a.id_caso
					LEFT JOIN usuarios c ON c.id_usuario = a.id_usuario
					LEFT JOIN encuestas_casos d ON d.id_caso = a.id_caso
					LEFT JOIN encuestas e ON e.id_encuesta = d.id_encuesta
					LEFT JOIN estados_casos f ON f.id_caso = a.id_caso
					LEFT JOIN estados g ON g.id_estado = f.id_estado
					LEFT JOIN estados_acciones h ON h.id_estado = g.id_estado
					LEFT JOIN acciones i ON i.id_accion = h.id_accion
                    WHERE f.id_estado != 1
					ORDER BY id_caso ASC, update_date DESC
;

-- -----------------------------------------------------
-- View `listar_casos_usuario`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listar_casos_usuario`;
CREATE  OR REPLACE VIEW `listar_casos_usuario` AS
SELECT valor, a.id_caso, a.intentos_llamada, a.intentos_fservicio, telefono, c.id_encuesta, limesurvey_encuesta, encuesta, estado, d.id_estado, accion, prioridad, usrname, limesurvey_caso, cdr_caso, update_date, DATE_FORMAT(update_date, '%d/%m %k:%i') fecha, DATE_FORMAT(update_date, '%d/%m/%Y %k:%i') fecha2 FROM casos a 
					LEFT JOIN encuestas_casos b ON b.id_caso = a.id_caso
					LEFT JOIN encuestas c ON c.id_encuesta = b.id_encuesta
					LEFT JOIN estados_casos d ON d.id_caso = a.id_caso
					LEFT JOIN estados e ON e.id_estado = d.id_estado
					LEFT JOIN estados_acciones f ON f.id_estado = e.id_estado
					LEFT JOIN acciones g ON g.id_accion = f.id_accion
					LEFT JOIN casos_usuarios h ON h.id_caso = a.id_caso
					LEFT JOIN usuarios i ON i.id_usuario = h.id_usuario
					ORDER BY id_caso ASC, update_date DESC
;

-- -----------------------------------------------------
-- View `listar_usuarios_casos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listar_usuarios_casos`;
CREATE  OR REPLACE VIEW `listar_usuarios_casos` AS
SELECT a.id_caso CASO, a.id_usuario usr_asignado, f.id_usuario usr_cambio, valor, prioridad, update_date, DATE_FORMAT(update_date, '%d/%m %k:%i') fecha, b.*, c.*, e.*, g.*, i.*, agenda, DATE_FORMAT(agenda, '%d/%m %k:%i') agendaF, limesurvey_caso, cdr_caso FROM casos_usuarios a 
					LEFT JOIN casos b ON b.id_caso = a.id_caso
					LEFT JOIN usuarios c ON c.id_usuario = a.id_usuario
					LEFT JOIN encuestas_casos d ON d.id_caso = a.id_caso
					LEFT JOIN encuestas e ON e.id_encuesta = d.id_encuesta
					LEFT JOIN estados_casos f ON f.id_caso = a.id_caso
					LEFT JOIN estados g ON g.id_estado = f.id_estado
					LEFT JOIN estados_acciones h ON h.id_estado = g.id_estado
					LEFT JOIN acciones i ON i.id_accion = h.id_accion
                    ORDER BY id_caso ASC, update_date DESC
;

-- -----------------------------------------------------
-- View `listar_estados_casos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `listar_estados_casos`;
CREATE  OR REPLACE VIEW `listar_estados_casos` AS
SELECT a.id_caso, telefono, estado, usrname, valor, agenda, DATE_FORMAT(agenda, '%d/%m %k:%i') agendaF, update_date, DATE_FORMAT(update_date, '%d/%m %k:%i') fecha , limesurvey_caso, cdr_caso FROM estados_casos a 
					LEFT JOIN casos b ON b.id_caso = a.id_caso
					LEFT JOIN estados c ON c.id_estado = a.id_estado
					LEFT JOIN usuarios d ON d.id_usuario = a.id_usuario
					ORDER BY update_date DESC
;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `usuarios`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (1, 'sadmin', '65d2ea03425887a717c435081cfc5dbb', NULL, NULL);
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (2, 'NB1', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.3', '1001');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (3, 'NB2', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.4', '1002');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (4, 'NB3', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.5', '1003');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (5, 'NB4', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.6', '1004');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (6, 'NB5', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.7', '1005');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (7, 'NB6', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.8', '1006');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (8, 'NB7', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.9', '1007');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (9, 'NB8', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.10', '1008');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (10, 'NB9', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.11', '1009');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (11, 'NB10', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.12', '1010');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (12, 'NB11', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.13', '1011');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (13, 'NB12', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.14', '1012');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (14, 'NB13', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.15', '1013');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (15, 'NB14', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.16', '1014');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (16, 'NB15', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.17', '1015');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (17, 'NB16', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.18', '1016');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (18, 'NB17', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.19', '1017');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (19, 'NB18', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.20', '1018');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (20, 'NB19', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.21', '1019');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (21, 'NB20', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.22', '1020');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (22, 'NB21', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.23', '1021');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (23, 'NB22', '81dc9bdb52d04dc20036dbd8313ed055', '172.168.10.24', '1022');
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (24, 'dleal', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL);
INSERT INTO `usuarios` (`id_usuario`, `usrname`, `password`, `ip_estacion`, `num_cdr`) VALUES (25, 'cyanez', '81dc9bdb52d04dc20036dbd8313ed055', NULL, NULL);

COMMIT;


-- -----------------------------------------------------
-- Data for table `roles`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (1, 'usuarios');
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (2, 'columnas');
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (3, 'generales');
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (4, 'encuestas');
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (5, 'estados');
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (6, 'casos');
INSERT INTO `roles` (`id_rol`, `rol`) VALUES (7, 'estacion');

COMMIT;


-- -----------------------------------------------------
-- Data for table `roles_usuarios`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (1, 1);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (1, 2);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (1, 3);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (1, 4);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (1, 5);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (1, 6);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (2, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (3, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (4, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (5, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (6, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (7, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (8, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (9, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (10, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (11, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (12, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (13, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (14, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (15, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (16, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (17, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (18, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (19, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (20, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (21, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (22, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (23, 7);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (24, 2);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (24, 3);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (24, 4);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (24, 5);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (24, 6);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (25, 2);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (25, 3);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (25, 4);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (25, 5);
INSERT INTO `roles_usuarios` (`id_usuario`, `id_rol`) VALUES (25, 6);

COMMIT;


-- -----------------------------------------------------
-- Data for table `estados`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (1, 'No llamado', 'Cuando el registro no ha sido usado (por defecto)', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (2, 'Fuera de Servicio', 'cuando el registro no conecta o sale grabaciÃ³n fuera de servicio', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (3, 'TelÃ©fono ocupado', 'Cuando el registro suena ocupado', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (4, 'Volver a llamar (con agenda)', 'Cuando se seÃ±ala dia y hora para volver a llamar', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (5, 'Volver a llamar (sin agenda)', 'Cuando no ha definido ni dia ni hora', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (6, 'Rechazo - No volver a llamar', 'Cuando la persona no quiere contestar y pide que no la vuelvan a llamar', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (7, 'Entrevista Incompleta - Abandonada', 'Cuando la encuesta no es finalizada y abandona', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (8, 'Entrevista Incompleta - Reagendada', 'Cuando la encuesta no es finalizada pero re-agenda', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (9, 'Entrevista Completa', 'Cuando la encuesta se finaliza exitosamente', 1);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (10, 'Telefono no corresponde', 'Cuando registro corresponde a otra persona y no hay contacto disponible', 0);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (11, 'Llamar a otro numero', 'Cuando se entrega un nuevo registro donde ubicar a la persona', 0);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (12, 'Entrega InformaciÃ³n', 'Cuando hay contacto y se entrega informaciÃ³n sin completar encuesta', 0);
INSERT INTO `estados` (`id_estado`, `estado`, `descripcion`, `visibilidad`) VALUES (13, 'Otro', 'Definido por usuario', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `acciones`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `acciones` (`id_accion`, `accion`) VALUES (1, 'Vuelve a aparecer');
INSERT INTO `acciones` (`id_accion`, `accion`) VALUES (2, 'Vuelve a aparecer (con agenda)');
INSERT INTO `acciones` (`id_accion`, `accion`) VALUES (3, 'Sacar del listado / no llamar nuevamente');
INSERT INTO `acciones` (`id_accion`, `accion`) VALUES (4, 'Revisar');

COMMIT;


-- -----------------------------------------------------
-- Data for table `estados_acciones`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (1, 1, 4);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (2, 3, 0);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (3, 1, 6);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (4, 2, 1);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (5, 1, 5);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (6, 3, 0);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (7, 3, 0);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (8, 2, 2);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (9, 3, 0);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (10, 3, 0);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (11, 1, 3);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (12, 3, 0);
INSERT INTO `estados_acciones` (`id_estado`, `id_accion`, `prioridad`) VALUES (13, 4, 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `generales`
-- -----------------------------------------------------
START TRANSACTION;
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (1, 'Nombre Proyecto', 'Fosis como muesta Bunker 2.0');
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (2, 'Intentos de llamada', '10');
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (3, 'Intentos Fuera de Servicio', '3');
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (4, 'Url Base Limesurvey', 'http://172.168.10.50:880/limesurvey/index.php/');
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (5, 'Idioma Limesurvey', '/lang-es-CL');
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (6, 'Id accion con agenda', '2');
INSERT INTO `generales` (`id_general`, `general`, `valor`) VALUES (7, 'Id accion con descripcion', '4');

COMMIT;

